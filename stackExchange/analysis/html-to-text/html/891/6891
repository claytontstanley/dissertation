<p>I have come across the following type of code many a times, and I wonder if this is a good practice (from Performance perspective) or not:</p>

<pre><code>try
{
    ... // some code
}
catch (Exception ex)
{
    ... // Do something
    throw new CustomException(ex);
}
</code></pre>

<p>Basically, what the coder is doing is that they are encompassing the exception in a custom exception and throwing that again.</p>

<p>How does this differ in Performance from the following two:</p>

<pre><code>try
{
    ... // some code
}
catch (Exception ex)
{
    .. // Do something
    throw ex;
}
</code></pre>

<p>or </p>

<pre><code>try
{
    ... // some code
}
catch (Exception ex)
{
    .. // Do something
    throw;
}
</code></pre>

<p>Putting aside any functional or coding best practice arguments, is there any performance difference between the 3 approaches?</p>

<p>Thanks.</p>