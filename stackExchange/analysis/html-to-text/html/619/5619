<p><strong>The Setting:</strong><br />
The program in question tries to post form data via an AJAX call to a target procedure contained in the same package as the caller. This is done for a site that uses a secure connection (<strong>https</strong>). The technology used here is <a href="http://www.orafaq.com/wiki/PL/SQL_FAQ" rel="nofollow">PLSQL</a> and the <a href="http://dojotoolkit.org/" rel="nofollow">DOJO</a> JavaScript library. The development tool is <a href="http://www.allroundautomations.nl/plsqldev.html" rel="nofollow">basically a text editor</a>.</p>

<p><strong>Code Snippet:</strong>  </p>

<blockquote>
  <p>function testPost() {  </p>
  
  <blockquote>
    <p>dojo.xhrPost( {<br />
                 url: ''dr_tm_w_0120.test_post'',<br />
                 form: ''orgForm'',<br />
                 load: testPostXHRCallback,<br />
                 error: testPostXHRError<br />
                });<br />
          }  </p>
  </blockquote>
  
  <p>function testPostXHRCallback(data,ioArgs) {  </p>
  
  <blockquote>
<pre><code>     alert(''post callback'');  
      try{  
      dojo.byId("messageDiv").innerHTML = data;  
      }  
      catch(ex){  
            if(ex.name == "TypeError")  
            {  
              alert("A type error occurred.");  
            }  
      }   
      return data;  
   }
</code></pre>
  </blockquote>
  
  <p>function testPostXHRError(data, ioArgs) {    </p>
  
  <blockquote>
<pre><code>     alert(data);  
      alert(''Error when retrieving data from the server!'');  
      return data;  
   }
</code></pre>
  </blockquote>
</blockquote>

<p><strong>The Problem:</strong><br />
When using IE6 (which the entire user-base uses), the response sent back from the server is a 404 error. </p>

<p><strong>Observations:</strong><br />
The program works fine in Firefox.<br />
The calling procedure cannot target any procedures within the same package.<br />
The calling procedure can target outside sites (both http, https).<br />
The other AJAX calls in the package that are not posts of form data work fine.<br />
I've searched the <em>internets</em> and consulted with senior-skilled team members and haven't discovered anything that satisfactorily addresses the issue.<br />
*Tried <a href="http://dojotoolkit.org/forum/dojo-core-dojo-0-9/dojo-core-support/xhrpost-firefox-fine-ie-not-so-much" rel="nofollow">Q&amp;A</a> over at Dojo support forums.      </p>

<p><strong>The Questions:</strong><br />
What troubleshooting techniques do you recommend?<br />
What troubleshooting tools do you recommend for HTTPS analyzing?<br />
Any hypotheses on what the issue might be?<br />
Any ideas for workarounds that aren't total (bad) hacks?</p>

<p><strong>Ed. The Solution</strong><br />
lomaxx, thx for the <a href="http://www.orafaq.com/wiki/PL/SQL_FAQ" rel="nofollow">fiddler</a> tip. you have no idea how awesome it was to get that and use it as a debugging tool. after starting it up this is what i found and how i fixed it (at least in the short term):</p>

<blockquote>
  <p>ef Fri, 8 Aug 2008 14:01:26 GMT dr_tm_w_0120.test_post: SIGNATURE (parameter names) MISMATCH VARIABLES IN FORM NOT IN PROCEDURE: SO1_DISPLAYED_,PO1_DISPLAYED_,RWA2_DISPLAYED_,DD1_DISPLAYED_ NON-DEFAULT VARIABLES IN PROCEDURE NOT IN FORM: 0</p>
</blockquote>

<p>After seeing that message from the server, I kicked around Fiddler a bit more to see what else I could learn from it. Found that there's a WebForms tab that shows the values in the web form. Wouldn't you know it, the "xxx_DISPLAYED_" fields above were in it. </p>

<p>I don't really understand yet why these fields exist, because I didn't create them explicitly in the web PLSQL code. But I do understand now that the target procedure has to include them as parameters to work correctly. Again, this is only in the case of IE6 for me, as Firefox worked fine.</p>

<p>Well, that the short term answer and hack to fix it. Hopefully, a little more work in this area will lead to a better understanding of the fundamentals going on here. </p>
