<p>What's the most efficient algorithm to find the rectangle with the largest area which will fit in the empty space?</p>

<p>Let's say the screen looks like this ('#' represents filled area):</p>

<pre><code>....................
..............######
##..................
.................###
.................###
#####...............
#####...............
#####...............
</code></pre>

<p>A probable solution is:</p>

<pre><code>....................
..............######
##...++++++++++++...
.....++++++++++++###
.....++++++++++++###
#####++++++++++++...
#####++++++++++++...
#####++++++++++++...
</code></pre>

<p>Normally I'd enjoy figuring out a solution. Although this time I'd like to avoid wasting time fumbling around on my own since this has a practical use for a project I'm working on. Is there a well-known solution?</p>

<p><strong>Shog9</strong> wrote:</p>

<blockquote>
  <p>Is your input an array (as implied by the other responses), or a list of occlusions in the form of arbitrarily sized, positioned rectangles (as might be the case in a windowing system when dealing with window positions)?</p>
</blockquote>

<p>Yes, I have a structure which keeps track of a set of windows placed on the screen. I also have a grid which keeps track of all the areas between each edge, whether they are empty or filled, and the pixel position of their left or top edge. I think there is some modified form which would take advantage of this property. Do you know of any?</p>
