i
am
refactoring
a
project
and
i
want
to
make
it
conform
to
the
mvc
pattern
(
model
view
control
)
.
there
are
three
object
:
a
serverlist
(
maintains
a
list
of
server
that
are
active
)
-
this
guy
will
be
the
controller
a
form
-
this
is
your
standard
.net
gui
a
databasethingy
-
wrapper
class
that
reads/writes
to
database
.
(
do
n't
ask
me
what
it
doe
,
i
ca
n't
touch
or
change
this
class
)
my
question
is
:
to
follow
proper
mvc
design
,
it
seems
that
the
serverlist
should
hold
reference
to
form
and
databasethingy
.
but
when
creating
a
.net
app
,
it
seems
that
we
are
forced
to
make
the
form
(
the
view
of
mvc
)
the
owner
of
serverlist
and
databasethingy
.
how
would
i
properly
break
this
down
into
an
mvc
design
and
who
should
``
own
''
what
?