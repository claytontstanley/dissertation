i
have
several
table
whose
only
unique
data
is
a
uniqueidentifier
(
a
guid
)
column
.
because
guids
are
non-sequential
(
and
they
're
client-side
generated
so
i
ca
n't
use
newsequentialid
(
)
)
,
i
have
made
a
non-primary
,
non-clustered
index
on
this
id
field
rather
than
giving
the
table
a
clustered
primary
key
.
i
'm
wondering
what
the
performance
implication
are
for
this
approach
.
i
've
seen
some
people
suggest
that
table
should
have
an
auto-incrementing
(
``
identity
''
)
int
a
a
clustered
primary
key
even
if
it
doe
n't
have
any
meaning
,
a
it
mean
that
the
database
engine
itself
can
use
that
value
to
quickly
look
up
a
row
instead
of
having
to
use
a
bookmark
.
my
database
is
merge-replicated
across
a
bunch
of
server
,
so
i
've
shied
away
from
identity
int
column
a
they
're
a
bit
hairy
to
get
right
in
replication
.
what
are
your
thought
?
should
table
have
primary
key
?
or
is
it
ok
to
not
have
any
clustered
index
if
there
are
no
sensible
column
to
index
that
way
?