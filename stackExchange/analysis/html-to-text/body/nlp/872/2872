my
goal
i
would
like
to
have
a
main
processing
thread
(
non
gui
)
,
and
be
able
to
spin
off
guis
in
their
own
background
thread
a
needed
,
and
having
my
main
non
gui
thread
keep
working.
put
another
way
,
i
want
my
main
non
gui-thread
to
be
the
owner
of
the
gui-thread
and
not
vice
versa.
i
'm
not
sure
this
is
even
possible
with
windows
forms
(
?
)
(
sorry
for
the
big
post
here.
i
've
had
complaint
about
previous
shorter
version
of
this
question
just
is
n't
comprehensible.
i
'm
a
lousy
writer
)
background
i
have
a
component
based
system
in
which
a
controller
dynamically
load
assembly
and
instantiates
and
run
class
implementing
a
common
icomponent
interface
with
a
single
method
dostuff
(
)
.
which
component
that
get
loaded
is
configured
via
a
xml
configuration
file
and
by
adding
new
assembly
containing
different
implementation
of
icomponent
.
the
component
provides
utility
function
to
the
main
application.
while
the
main
program
is
doing
it
's
thing
,
e.g.
controlling
a
nuclear
plant
,
the
component
might
be
performing
utility
task
(
in
their
own
thread
)
,
e.g.
cleaning
the
database
,
sending
email
,
printing
funny
joke
on
the
printer
,
what
have
you.
what
i
would
like
,
is
to
have
one
of
these
component
be
able
to
display
a
gui
,
e.g.
with
status
information
for
the
said
email
sending
component.
the
lifetime
of
the
complete
system
look
like
this
application
starts.
check
configuration
file
for
component
to
load.
load
them.
for
each
component
,
run
dostuff
(
)
to
initialize
it
and
make
it
live
it
own
life
in
their
own
threads.
continue
to
do
main
application-thingy
king
of
work
,
forever.
i
have
not
yet
been
able
to
successfully
perform
point
3
if
the
component
fire
up
a
gui
in
dostuff
(
)
.
it
simply
just
halt
until
the
gui
is
closed.
and
not
until
the
gui
is
closed
doe
the
program
progress
to
point
4.
it
would
be
great
if
these
component
were
allowed
to
start
up
their
own
windows
forms
guis.
problem
when
a
component
try
to
fire
up
a
gui
in
dostuff
(
)
(
the
exact
line
of
code
is
when
the
component
run
application.run
(
theform
)
)
,
the
component
and
hence
our
system
``
hang
''
at
the
application.run
(
)
line
until
the
gui
is
closed.
well
,
the
just
fired
up
gui
work
fine
,
a
expected.
example
of
components.
one
ha
n't
nothing
to
do
with
gui
,
whilst
the
second
fire
up
a
cute
window
with
pink
fluffy
bunny
in
them.
public
class
mycomponent1
:
icomponent
{
public
string
dostuff
(
...
)
{
//
write
something
to
the
database
}
}
public
class
mycomponent2
:
icomponent
public
void
dostuff
(
)
{
application.enablevisualstyles
(
)
;
application.setcompatibletextrenderingdefault
(
false
)
;
application.run
(
new
form
(
)
)
;
//
i
want
the
thread
to
immediately
return
after
the
gui
//
is
fired
up
,
so
that
my
main
thread
can
continue
to
work.
}
}
i
have
tried
this
with
no
luck.
even
when
i
try
to
fire
up
the
gui
in
it
's
own
thread
,
the
execution
halt
until
the
gui
a
closed.
public
void
dostuff
(
)
{
new
thread
(
threadedinitialize
)
.start
(
)
}
private
void
threadedinitialize
(
)
{
application.enablevisualstyles
(
)
;
application.setcompatibletextrenderingdefault
(
false
)
;
application.run
(
new
form
(
)
)
;
}
is
it
possible
to
spin
off
a
gui
and
return
after
application.run
(
)
?