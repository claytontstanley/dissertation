we
have
a
simple
utility
class
in-house
for
our
database
call
(
a
light
wrapper
around
ado.net
)
,
but
i
am
thinking
of
creating
class
for
each
database/object.
would
it
be
smart
to
do
so
,
or
would
it
only
benefit
if
we
were
using
the
full
mvc
framework
for
asp.net
?
so
we
have
this
:
sqlwrapper.getrecordset
(
connstr-alias
,
sql-statement
,
parameter
)
;
sqlwrapper.getdataset
(
connstr-alias
,
sql-statement
,
parameter
)
;
sqlwrapper.execute
(
connstr-alias
,
sql-statement
,
parameter
)
;
thinking
of
doing
this
:
person
p
=
person.get
(
id
)
;
p.fname
=
``
jon
''
;
p.lname
=
``
smith
''
;
p.save
(
)
;
or
for
a
new
record
-
person
p
=
new
person
(
)
;
p.fname
=
``
jon
''
;
p.lname
=
``
smith
''
;
p.save
(
)
;
p.delete
(
)
;
would
this
be
smart
,
or
would
it
be
overkill.
i
can
see
the
benefit
for
reuse
,
changing
database
,
and
maintenance/readability
.