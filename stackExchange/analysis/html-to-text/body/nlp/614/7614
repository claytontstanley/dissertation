what
is
the
best
way
of
testing
a
function
that
throw
on
failure
?
or
testing
a
function
that
is
fairly
immune
to
failure
?
for
instance
;
i
have
a
i/o
completion
port
class
that
throw
in
the
constructor
if
it
ca
n't
initialise
the
port
correctly
.
this
us
the
win32
function
of
createiocompletionport
in
the
initialiser
list
.
if
the
handle
is
n't
set
correctly
-
a
non-null
value
-
then
the
constructor
will
throw
an
exception
.
i
have
never
seen
this
function
fail
.
i
am
pretty
certain
that
this
(
and
other
function
like
it
in
my
code
)
if
they
fail
will
behave
correctly
,
the
code
is
50
line
long
including
white-space
,
so
my
question
are
a
)
is
it
worth
testing
that
it
will
throw
b
)
and
if
it
is
worth
testing
,
how
to
?
c
)
should
simple
wrapper
class
a
these
be
unit-tested
?
for
b
)
i
thought
about
overriding
createiocompletionport
and
passing
the
value
through
.
in
the
unit
test
override
it
and
cause
it
to
return
0
when
a
certain
value
is
passed
in
.
however
since
this
is
used
in
the
constructor
then
this
need
to
be
static
.
does
this
seem
valid
or
not
?
thanks
,
g
.