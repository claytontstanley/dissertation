i
'm
trying
to
read
binary
data
using
c
#
.
i
have
all
information
about
the
layout
of
the
data
in
the
file
i
want
to
read
.
i
'm
able
to
read
the
data
``
chunk
by
chunk
''
,
i.e
.
getting
the
first
40
byte
of
data
converting
it
to
a
string
,
get
the
next
40
byte
,
...
since
there
are
at
least
three
slighlty
different
version
of
the
data
,
i
would
like
to
read
the
data
directly
into
a
struct
.
it
just
feel
so
much
more
right
than
by
reading
it
``
line
by
line
''
.
i
have
tried
the
following
approach
but
to
no
avail
:
structtype
astruct
;
int
count
=
marshal.sizeof
(
typeof
(
structtype
)
)
;
byte
[
]
readbuffer
=
new
byte
[
count
]
;
binaryreader
reader
=
new
binaryreader
(
stream
)
;
readbuffer
=
reader.readbytes
(
count
)
;
gchandle
handle
=
gchandle.alloc
(
readbuffer
,
gchandletype.pinned
)
;
astruct
=
(
structtype
)
marshal.ptrtostructure
(
handle.addrofpinnedobject
(
)
,
typeof
(
structtype
)
)
;
handle.free
(
)
;
the
stream
is
an
opened
filestream
from
which
i
have
began
to
read
from
.
i
get
an
accessviolationexception
when
using
marshal.ptrtostructure
.
the
stream
contains
more
information
than
i
'm
trying
to
read
since
i
'm
not
interested
in
data
at
the
end
of
the
file
.
the
struct
is
defined
like
:
[
structlayout
(
layoutkind.explicit
)
]
struct
structtype
{
[
fieldoffset
(
0
)
]
public
string
filedate
;
[
fieldoffset
(
8
)
]
public
string
filetime
;
[
fieldoffset
(
16
)
]
public
int
id1
;
[
fieldoffset
(
20
)
]
public
string
id2
;
}
the
example
code
is
changed
from
original
to
make
this
question
shorter
.
how
would
i
read
binary
data
from
a
file
into
a
struct
?