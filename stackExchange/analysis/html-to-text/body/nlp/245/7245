what
's
the
most
efficient
algorithm
to
find
the
rectangle
with
the
largest
area
which
will
fit
in
the
empty
space
?
let
's
say
the
screen
look
like
this
(
'
#
'
represents
filled
area
)
:
...
...
...
...
...
...
..
...
...
...
...
..
#
#
#
#
#
#
#
#
...
...
...
...
...
...
...
...
...
...
...
..
#
#
#
...
...
...
...
...
..
#
#
#
#
#
#
#
#
...
...
...
...
...
#
#
#
#
#
...
...
...
...
...
#
#
#
#
#
...
...
...
...
...
a
probable
solution
is
:
...
...
...
...
...
...
..
...
...
...
...
..
#
#
#
#
#
#
#
#
...
++++++++++++
...
...
..++++++++++++
#
#
#
...
..++++++++++++
#
#
#
#
#
#
#
#
++++++++++++
...
#
#
#
#
#
++++++++++++
...
#
#
#
#
#
++++++++++++
...
normally
i
'd
enjoy
figuring
out
a
solution
.
although
this
time
i
'd
like
to
avoid
wasting
time
fumbling
around
on
my
own
since
this
ha
a
practical
use
for
a
project
i
'm
working
on
.
is
there
a
well-known
solution
?
shog9
wrote
:
is
your
input
an
array
(
a
implied
by
the
other
response
)
,
or
a
list
of
occlusion
in
the
form
of
arbitrarily
sized
,
positioned
rectangle
(
a
might
be
the
case
in
a
windowing
system
when
dealing
with
window
position
)
?
yes
,
i
have
a
structure
which
keep
track
of
a
set
of
window
placed
on
the
screen
.
i
also
have
a
grid
which
keep
track
of
all
the
area
between
each
edge
,
whether
they
are
empty
or
filled
,
and
the
pixel
position
of
their
left
or
top
edge
.
i
think
there
is
some
modified
form
which
would
take
advantage
of
this
property
.
do
you
know
of
any
?