i
've
tried
to
write
a
string
replace
function
in
c
,
which
work
on
a
char
*
which
ha
been
allocated
using
malloc
(
)
.
it
's
a
little
different
in
that
it
will
find
and
replace
string
,
rather
than
character
in
the
starting
string
.
it
's
trivial
to
do
if
the
search
and
replace
string
are
the
same
length
(
or
the
replace
string
is
shorter
than
the
search
string
)
,
since
i
have
enough
space
allocated
.
if
i
try
to
use
realloc
(
)
,
i
get
an
error
that
tell
me
i
am
doing
a
double
free
-
which
i
do
n't
see
how
i
am
,
since
i
am
only
using
realloc
(
)
.
perhaps
a
little
code
will
help
:
void
strrep
(
char
*input
,
char
*search
,
char
*replace
)
{
int
searchlen
=
strlen
(
search
)
;
int
replacelen
=
strlen
(
replace
)
;
int
delta
=
replacelen
-
searchlen
;
char
*find
=
input
;
while
(
find
=
strstr
(
find
,
search
)
)
{
if
(
delta
>
0
)
{
realloc
(
input
,
strlen
(
input
)
+
delta
)
;
find
=
strstr
(
input
,
search
)
;
}
memmove
(
find
+
replacelen
,
find
+
searchlen
,
strlen
(
input
)
-
(
find
-
input
)
)
;
memmove
(
find
,
replace
,
replacelen
)
;
}
}
the
program
work
,
until
i
try
to
realloc
(
)
in
an
instance
where
the
replaced
string
will
be
longer
than
the
initial
string
.
(
it
still
kind
of
work
,
it
just
spit
out
error
a
well
a
the
result
)
.
if
it
help
,
the
calling
code
look
liks
:
#
include
<
stdio.h
>
#
include
<
string.h
>
#
include
<
stdlib.h
>
void
strrep
(
char
*input
,
char
*search
,
char
*replace
)
;
int
main
(
void
)
{
char
*input
=
malloc
(
81
)
;
while
(
(
fgets
(
input
,
81
,
stdin
)
)
!
=
null
)
{
strrep
(
input
,
``
noel
''
,
``
christmas
''
)
;
}
}
[
edit
:
i
'm
not
seeing
any
html-escaped
char
.
]