i
've
read
that
it
is
possible
to
add
a
method
to
an
existing
object
(
e.g.
not
in
the
class
definition
)
in
python
,
i
think
this
is
called
monkey
patching
(
or
in
some
case
duck
punching
)
.
i
understand
that
it
's
not
always
a
good
decision
to
do
so.
but
,
how
might
one
do
this
?
and
if
you
do
n't
know
python
,
can
your
language
of
choice
do
this
?
if
so
,
how
?
update
8/04/2008
00:21:01
est
:
that
look
like
a
good
answer
john
downey
,
i
tried
it
but
it
appears
that
it
end
up
being
not
a
true
method.
your
example
defines
the
new
patch
function
with
an
argument
of
self
,
but
if
you
write
actual
code
that
way
,
the
now
patched
class
method
asks
for
an
argument
named
self
(
it
doe
n't
automagically
recognize
it
a
the
identity
class
,
which
is
what
would
happen
if
defined
within
the
class
definition
)
,
meaning
you
have
to
call
class.patch
(
class
)
instead
of
just
class.patch
(
)
if
you
want
the
same
functionality
a
a
true
method.
it
look
like
python
is
n't
really
treating
it
a
a
method
,
but
more
just
a
a
variable
which
happens
to
be
a
function
(
and
a
such
is
callable
)
.
is
there
any
way
to
attach
an
actual
method
to
a
class
?
oh
,
and
ryan
,
that
is
n't
exactly
what
i
wa
looking
for
(
it
is
n't
builtin
functionality
)
,
but
it
is
quite
cool
nonetheless.
update
8/05/2008
22:24:01
est
:
thank
you
for
the
well
presented
answer
jason
pratt
,
that
wa
exactly
what
i
wa
looking
for
.