i
'm
trying
to
use
the
corecon
api
in
visual
studio
2008
to
programmatically
launch
device
emulator
.
when
i
call
device.connect
(
)
,
i
inexplicably
get
a
directorynotfoundexception
.
i
get
it
if
i
try
it
in
powershell
or
in
c
#
console
application
.
here
's
the
code
i
'm
using
:
static
void
main
(
string
[
]
args
)
{
datastoremanager
dm
=
new
datastoremanager
(
1033
)
;
collection
<
platform
>
platform
=
dm.getplatforms
(
)
;
foreach
(
var
p
in
platform
)
{
console.writeline
(
``
{
0
}
{
1
}
''
,
p.name
,
p.id
)
;
}
platform
platform
=
platform
[
3
]
;
console.writeline
(
``
selected
{
0
}
''
,
platform.name
)
;
device
device
=
platform.getdevices
(
)
[
0
]
;
device.connect
(
)
;
console.writeline
(
``
device
connected
''
)
;
systeminfo
info
=
device.getsysteminfo
(
)
;
console.writeline
(
``
system
os
version
:
{
0
}
.
{
1
}
.
{
2
}
''
,
info.osmajor
,
info.osminor
,
info.osbuildno
)
;
console.readline
(
)
;
}
my
question
:
does
anyone
know
why
i
'm
getting
this
error
?
i
'm
running
this
on
winxp
32-bit
,
plain
jane
visual
studio
2008
pro
.
i
imagine
it
's
some
config
issue
since
i
ca
n't
do
it
from
a
console
app
or
powershell
.
here
's
the
stack
trace
a
requested
:
system.io.directorynotfoundexception
wa
unhandled
message=
''
the
system
can
not
find
the
path
specified.\r\n
''
source=
''
device
connection
manager
''
stacktrace
:
at
microsoft.visualstudio.deviceconnectivity.interop.conmanserverclass.connectdevice
(
)
at
microsoft.smartdevice.connectivity.device.connect
(
)
at
consoleapplication1.program.main
(
string
[
]
args
)
in
c
:
\documents
and
settings\thomas\local
settings\application
data\temporary
projects\consoleapplication1\program.cs
:
line
23
at
system.appdomain._nexecuteassembly
(
assembly
assembly
,
string
[
]
args
)
at
system.appdomain.executeassembly
(
string
assemblyfile
,
evidence
assemblysecurity
,
string
[
]
args
)
at
microsoft.visualstudio.hostingprocess.hostproc.runusersassembly
(
)
at
system.threading.threadhelper.threadstart_context
(
object
state
)
at
system.threading.executioncontext.run
(
executioncontext
executioncontext
,
contextcallback
callback
,
object
state
)
at
system.threading.threadhelper.threadstart
(
)
innerexception: