i
'm
writing
an
application
that
is
basically
just
a
preference
dialog
much
like
the
tree-view
preference
dialog
that
visual
studio
itself
uses.
the
function
of
the
application
is
simply
a
pass-through
for
data
from
a
serial
device
to
a
file.
it
performs
many
,
many
transformation
on
the
data
before
writing
it
to
the
file
,
so
the
gui
for
the
application
is
simply
all
the
setting
that
dictate
what
those
transformation
should
be.
what
's
the
best
way
to
go
about
designing/coding
a
tree-view
preference
dialog
?
the
way
i
've
been
going
about
it
is
building
the
main
window
with
a
docked
tree
control
on
the
left.
then
i
have
been
creating
container
control
that
correspond
to
each
node
of
the
tree.
when
a
node
is
selected
,
the
app
brings
that
node
's
corresponding
container
control
to
the
front
,
move
it
to
the
right
position
,
and
maximizes
it
in
the
main
window.
this
seems
really
,
really
clunky
while
designing
it.
it
basically
mean
i
have
ton
of
container
control
beyond
the
edge
of
the
main
window
during
design
time
that
i
have
to
keep
scrolling
the
main
window
over
to
in
order
to
work
with
them.
i
do
n't
know
if
this
totally
make
sense
the
way
i
'm
writing
this
,
but
maybe
this
visual
for
what
i
'm
talking
about
will
make
more
sense
:
basically
i
have
to
work
with
this
huge
form
,
with
container
control
all
over
the
place
,
and
then
do
a
bunch
of
run-time
reformatting
to
make
it
all
work.
this
seems
like
a
lot
of
extra
work.
am
i
doing
this
in
a
totally
stupid
way
?
is
there
some
``
obvious
''
easier
way
of
doing
this
that
i
'm
missing
?