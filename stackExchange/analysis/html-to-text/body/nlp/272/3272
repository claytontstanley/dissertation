i
am
currently
working
on
a
project
with
specific
requirement
.
a
brief
overview
of
these
are
a
follows
:
data
is
retrieved
from
external
webservices
data
is
stored
in
sql
2005
data
is
manipulated
via
a
web
gui
the
window
service
that
communicates
with
the
web
service
ha
no
coupling
with
our
internal
web
ui
,
except
via
the
database
.
communication
with
the
web
service
need
to
be
both
time-based
,
and
triggered
via
user
intervention
on
the
web
ui
.
the
current
(
pre-pre-production
)
model
for
web
service
communication
triggering
is
via
a
database
table
that
store
trigger
request
generated
from
the
manual
intervention
.
i
do
not
really
want
to
have
multiple
trigger
mechanism
,
but
would
like
to
be
able
to
populate
the
database
table
with
trigger
based
upon
the
time
of
the
call
.
as
i
see
it
there
are
two
way
to
accomplish
this
.
1
)
adapt
the
trigger
table
to
store
two
extra
parameter
.
one
being
``
is
this
time-based
or
manually
added
?
``
and
a
nullable
field
to
store
the
timing
detail
(
exact
format
to
be
determined
)
.
if
it
is
a
manaully
created
trigger
,
mark
it
a
processed
when
the
trigger
ha
been
fired
,
but
not
if
it
is
a
timed
trigger
.
or
2
)
create
a
second
window
service
that
creates
the
trigger
on-the-fly
at
timed
interval
.
the
second
option
seems
like
a
fudge
to
me
,
but
the
management
of
option
1
could
easily
turn
into
a
programming
nightmare
(
how
do
you
know
if
the
last
poll
of
the
table
returned
the
event
that
need
to
fire
,
and
how
do
you
then
stop
it
re-triggering
on
the
next
poll
)
i
'd
appreciate
it
if
anyone
could
spare
a
few
minute
to
help
me
decide
which
route
(
one
of
these
two
,
or
possibly
a
third
,
unlisted
one
)
to
take
.
thanks
in
advance