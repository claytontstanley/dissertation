i
'm
in
an
environment
with
a
lot
of
computer
that
have
n't
been
properly
inventoried.
basically
,
no
one
know
which
ip
go
with
which
mac
address
and
which
hostname.
so
i
wrote
the
following
:
#
this
script
go
down
the
entire
ip
range
and
attempt
to
#
retrieve
the
hostname
and
mac
address
and
output
them
#
into
a
file.
yay
!
require
``
socket
''
twooctets
=
``
10.26
''
def
computer_exists
?
(
computerip
)
system
(
``
ping
-c
1
-w
1
#
{
computerip
}
''
)
end
def
append_to_file
(
line
)
file
=
file.open
(
``
output.txt
''
,
``
a
''
)
file.puts
(
line
)
file.close
end
def
getinfo
(
current_ip
)
begin
if
computer_exists
?
(
current_ip
)
arp_output
=
`arp
-v
#
{
current_ip
}
`
mac_addr
=
arp_output.to_s.match
(
/..
:
..
:
..
:
..
:
..
:
../
)
host_name
=
socket.gethostbyname
(
current_ip
)
append_to_file
(
``
#
{
host_name
[
0
]
}
-
#
{
current_ip
}
-
#
{
mac_addr
}
\n
''
)
end
rescue
socketerror
=
>
mysocketerror
append_to_file
(
``
unknown
-
#
{
current_ip
}
-
#
{
mac_addr
}
''
)
end
end
(
6..8
)
.each
do
|i|
case
i
when
6
for
j
in
(
1..190
)
current_ip
=
``
#
{
twooctets
}
.
#
{
i
}
.
#
{
j
}
''
getinfo
(
current_ip
)
end
when
7
for
j
in
(
1..255
)
current_ip
=
``
#
{
twooctets
}
.
#
{
i
}
.
#
{
j
}
''
getinfo
(
current_ip
)
end
when
8
for
j
in
(
1..52
)
current_ip
=
``
#
{
twooctets
}
.
#
{
i
}
.
#
{
j
}
''
getinfo
(
current_ip
)
end
end
end
everything
work
except
it
doe
not
find
a
reverse
dns.
sample
output
that
i
'm
getting
is
this
:
10.26.6.12
-
10.26.6.12
-
00:11:11:9b:13:9f
10.26.6.17
-
10.26.6.17
-
08:00:69:9a:97
:
c3
10.26.6.18
-
10.26.6.18
-
08:00:69:93:2c
:
e2
if
i
do
nslookup
10.26.6.12
then
i
get
the
correct
reverse
dns
so
that
show
that
my
machine
is
seeing
the
dns
server.
i
have
tried
socket.gethostbyname
,
gethostbyaddr
,
but
it
doe
n't
work
:
(
any
guidance
will
be
much
appreciated.
thanks
!